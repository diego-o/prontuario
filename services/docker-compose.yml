version: '3'
services:
  db_paciente:
    image: mongo:4.0
    volumes:
      - db-data-paciente:/data/db
      - mongo-config-paciente:/data/configdb
  db_organizacao:
    image: mongo:4.0
    volumes:
      - db-data-organizacao:/data/db
      - mongo-config-organizacao:/data/configdb
  db_carteira:
    image: mongo:4.0
    volumes:
      - db-data-carteira:/data/db
      - mongo-config-carteira:/data/configdb
  db_prontuario:
    image: mongo:4.0
    volumes:
      - db-data-prontuario:/data/db
      - mongo-config-prontuario:/data/configdb
  db_autenticacao:
    image: mongo:4.0
    volumes:
      - db-data-autenticacao:/data/db
      - mongo-config-autenticacao:/data/configdb

  api_paciente:
    image: node:10.7
    volumes: 
      - ./service_paciente:/service_paciente
    links:
      - db_paciente
    ports:
      - "3000"
    command: bash -c "cd /service_paciente && npm i && node server"

  api_organizacao:
    image: node:10.7
    volumes: 
      - ./service_organizacao:/service_organizacao
    links:
      - db_paciente
    ports:
      - "3000"
    command: bash -c "cd /service_organizacao && npm i && node server"
  
  api_carteira:
    image: node:10.7
    volumes: 
      - ./service_carteira:/service_carteira
    links:
      - db_paciente
    ports:
      - "3000"
    command: bash -c "cd /service_carteira && npm i && node server"

  api_prontuario:
    image: node:10.7
    volumes: 
      - ./service_prontuario:/service_prontuario
    links:
      - db_paciente
    ports:
      - "3000"
    command: bash -c "cd /service_prontuario && npm i && node server"

  api_gateway:
    image: node:10.7
    volumes:
      - ./service_gateway:/service_gateway
    links:
      - db_autenticacao
      - api_paciente
      - api_organizacao
      - api_carteira
      - api_prontuario
    ports:
      - "80:3000"
    command: bash -c "cd /service_gateway && npm i && node server"

  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 443:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
  
  db-data-paciente:
  mongo-config-paciente:

  db-data-organizacao:
  mongo-config-organizacao:

  db-data-carteira:
  mongo-config-carteira:

  db-data-prontuario:
  mongo-config-prontuario:

  db-data-autenticacao:
  mongo-config-autenticacao: